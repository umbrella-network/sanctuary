{
  "openapi": "3.0.0",
  "info": {
    "title": "Block Explorer - Sanctuary",
    "description": "Retrieves raw block leaves from Umbrella sidechain blocks. Displays information about the leaves and allows users to retrieve Merkle proofs. Provides an API for retrieving block leaves and Merkle proofs.",
    "version": "4.2.1"
  },
  "servers": [
    {
      "url": "http://localhost:3003",
      "description": "Local environment server"
    },
    {
      "url": "https://api.dev.umb.network",
      "description": "Development environment server"
    },
    {
      "url": "https://api.umb.network",
      "description": "Production live server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Checks if the server is alive",
        "tags": ["default"],
        "responses": {
          "200": {
            "description": "A plain text \"pong\"",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "pong"
                }
              }
            }
          }
        }
      }
    },
    "/blocks": {
      "get": {
        "summary": "Returns the latest blocks",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of the latest blocks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Block"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/latest": {
      "get": {
        "summary": "Returns the latest block",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the latest block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{blockId}": {
      "get": {
        "summary": "Returns a block by ID",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "The ID of the block",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the block data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{blockId}/leaves": {
      "get": {
        "summary": "Returns the leaves of a block by its ID",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "The ID of the block",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the leaves of a block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Leaf"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fcds": {
      "get": {
        "summary": "Returns FCDs from every chain",
        "tags": ["first class data"],
        "responses": {
          "200": {
            "description": "An array of FCDs of every chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/FCD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fcds/{chainId}": {
      "get": {
        "summary": "Returns FCDs from a specific chain",
        "tags": ["first class data"],
        "parameters": [
          {
            "name": "chainId",
            "in": "path",
            "description": "The ID of the Chain. \"bsc\" or \"eth\".",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of FCDs of a specific chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/FCD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/keys/fcds": {
      "get": {
        "summary": "Returns the keys used in First Class Data",
        "tags": ["keys"],
        "responses": {
          "200": {
            "description": "An array of the keys used in First Class Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": ["KEY_1", "KEY_2", "KEY_3"]
                }
              }
            }
          }
        }
      }
    },
    "/keys/layer2": {
      "get": {
        "summary": "Returns the keys used in Layer Two Data",
        "tags": ["keys"],
        "responses": {
          "200": {
            "description": "An array of the keys used in Layer Two Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": ["KEY_1", "KEY_2", "KEY_3"]
                }
              }
            }
          }
        }
      }
    },
    "/proofs": {
      "get": {
        "summary": "Returns the latest block height and proofs for a given set of leaf keys",
        "tags": ["proofs"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing proof data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proof"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Returns user data based on a JWT token",
        "tags": ["users"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Register a new user",
        "tags": ["users"],
        "requestBody": {
          "description": "A JSON containing user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "examples": {
                "user": {
                  "summary": "An example of a user",
                  "value": {
                    "email": "jd@umb.network",
                    "password": "q1w2e3r4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON containing the user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserBrief"
                }
              }
            }
          },
          "422": {
            "description": "User information is missing or invalid"
          }
        }
      }
    },
    "/usage-metrics": {
      "get": {
        "summary": "Returns the usage of the user keys",
        "tags": ["metrics"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of the usage of the user projects keys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usage"
                }
              }
            }
          },
          "403": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Authenticate a registered user",
        "tags": ["authentication"],
        "requestBody": {
          "description": "A JSON containing user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "examples": {
                "user": {
                  "summary": "An example of a user",
                  "value": {
                    "email": "jd@umb.network",
                    "password": "q1w2e3r4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User is successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Authorization information is missing or invalid"
          }
        }
      }
    },
    "/api-keys": {
      "get": {
        "summary": "Returns all of the API keys of the user",
        "tags": ["api keys"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array containing the API keys of the user's projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKey"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Register a new API key for an user project",
        "tags": ["api keys"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "requestBody": {
          "description": "A JSON containing the key metadata",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "metadata": {
                  "summary": "An example of a API key metadata",
                  "value": {
                    "projectId": "project_id",
                    "description": "My API key",
                    "expiresAt": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "An API key was successfully created for an user project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          },
          "400": {
            "description": "Project ID was not provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Project with provided project ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api-keys/{id}": {
      "patch": {
        "summary": "Updates an existing API key from an user project",
        "tags": ["api keys"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the API key",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "A JSON containing the key metadata",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "metadata": {
                  "summary": "An example of a API key metadata",
                  "value": {
                    "description": "My API key",
                    "expiresAt": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An API key was successfully created for an user project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          },
          "400": {
            "description": "Project ID was not provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Project with provided project ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an API key from an user project",
        "tags": ["api keys"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the API key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "API key was successfully deleted"
          },
          "400": {
            "description": "API key was not provided",
            "content": {
              "application/json": {
                "type": "object",
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "403": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "API key provided is invalid",
            "content": {
              "application/json": {
                "type": "object",
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "Returns the projects of the user",
        "tags": ["projects"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array containing the projects of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Register a new project",
        "tags": ["projects"],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "requestBody": {
          "description": "A JSON containing the name of the project",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "name": {
                  "type": "string"
                }
              },
              "examples": {
                "user": {
                  "summary": "An example of a project",
                  "value": {
                    "name": "My Project"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project is successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "delete": {
        "summary": "Deletes a user project",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project to be deleted",
            "required": "true",
            "type": "string"
          }
        ],
        "security": [
          {
            "UserJWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "The project is successfully deleted"
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "summary": "Returns information about Sanctuary",
        "responses": {
          "200": {
            "description": "A JSON containing information about Sanctuary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Info"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "UserJWTToken": {
        "type": "apiKey",
        "in": "header",
        "scheme": "bearer",
        "name": "Authorization"
      },
      "ProjectAPIKey": {
        "type": "apiKey",
        "in": "header",
        "scheme": "Bearer",
        "name": "Authorization"
      }
    },
    "schemas": {
      "Block": {
        "type": "object",
        "properties": {
          "voters": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "hex"
            }
          },
          "votes": {
            "type": "object",
            "properties": {
              "voter_hex": {
                "type": "string",
                "format": "hex"
              }
            }
          },
          "_id": {
            "type": "string"
          },
          "chainAddress": {
            "type": "string",
            "format": "hex"
          },
          "root": {
            "type": "string",
            "format": "hex"
          },
          "blockId": {
            "type": "number"
          },
          "minter": {
            "type": "string",
            "format": "hex"
          },
          "staked": {
            "type": "string"
          },
          "power": {
            "type": "string"
          },
          "anchor": {
            "type": "number"
          },
          "dataTimestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "Leaf": {
        "type": "object",
        "properties": {
          "proof": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "hex"
            }
          },
          "_id": {
            "type": "string"
          },
          "blockId": {
            "type": "number"
          },
          "key": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          },
          "value": {
            "type": "string",
            "format": "hex"
          }
        }
      },
      "FCD": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          },
          "chainId": {
            "type": "string"
          },
          "dataTimestamp": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "projects": {
                "type": "array",
                "items": {}
              },
              "companies": {
                "type": "array",
                "items": {}
              }
            }
          }
        }
      },
      "UserBrief": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "Proof": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "block": {
                "type": "object",
                "properties": {
                  "voters": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "hex"
                    }
                  },
                  "votes": {
                    "type": "object",
                    "properties": {
                      "voter_hex": {
                        "type": "string"
                      }
                    }
                  },
                  "_id": {
                    "type": "string"
                  },
                  "chainAddress": {
                    "type": "string",
                    "format": "hex"
                  },
                  "root": {
                    "type": "string",
                    "format": "hex"
                  },
                  "blockId": {
                    "type": "string"
                  },
                  "minter": {
                    "type": "string",
                    "format": "hex"
                  },
                  "staked": {
                    "type": "string"
                  },
                  "power": {
                    "type": "string"
                  },
                  "anchor": {
                    "type": "number"
                  },
                  "dataTimestamp": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "__v": {
                    "type": "number"
                  }
                },
                "keys": {
                  "type": "array"
                },
                "leaves": {
                  "type": "array"
                }
              }
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "ownerType": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "ApiKey": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "Info": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "number"
              }
            }
          },
          "chainAddress": {
            "type": "string",
            "format": "hex"
          },
          "blockNumber": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "hex": {
                "type": "string",
                "format": "hex"
              }
            }
          },
          "validators": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "hex"
            }
          },
          "timePadding": {
            "type": "number"
          },
          "lastDataTimestamp": {
            "type": "number"
          },
          "lastBlockId": {
            "type": "number"
          },
          "nextLeader": {
            "type": "string",
            "format": "hex"
          },
          "nextBlockId": {
            "type": "number"
          },
          "powers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "hex": {
                  "type": "string",
                  "format": "hex"
                }
              }
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contractRegistryAddress": {
            "type": "string",
            "format": "hex"
          },
          "chainContractAddress": {
            "type": "string",
            "format": "hex"
          },
          "version": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          }
        }
      },
      "Usage": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string"
            },
            "apiKey": {
              "type": "string"
            },
            "route": {
              "type": "string"
            },
            "method": {
              "type": "string"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "A message representing what went wrong with the request"
          }
        }
      }
    }
  }
}
