{
  "openapi": "3.0.0",
  "info": {
    "title": "Block Explorer - Sanctuary",
    "description": "Retrieves raw block leaves from Umbrella sidechain blocks. Displays information about the leaves and allows users to retrieve Merkle proofs. Provides an API for retrieving block leaves and Merkle proofs.",
    "version": "4.4.0"
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Checks if the server is alive",
        "tags": ["default"],
        "responses": {
          "200": {
            "description": "A plain text \"pong\"",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "pong"
                }
              }
            }
          }
        }
      }
    },
    "/blocks": {
      "get": {
        "summary": "Returns the latest blocks",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "parameters": [
          {
            "name": "chainId",
            "in": "query",
            "description": "The ID of the chain. \"bsc\", \"eth\", \"polygon\" or \"avax\".",
            "required": false,
            "type": "string",
            "example": "bsc"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of the latest blocks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Block"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/latest": {
      "get": {
        "summary": "Returns the latest block",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the latest block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{blockId}": {
      "get": {
        "summary": "Returns a block by ID",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "The ID of the block",
            "required": true,
            "type": "string",
            "example": "153111"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the block data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{blockId}/leaves": {
      "get": {
        "summary": "Returns the leaves of a block by its ID",
        "tags": ["blocks"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "The ID of the block",
            "required": true,
            "type": "string",
            "example": "153111"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the leaves of a block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Leaf"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fcds": {
      "get": {
        "summary": "Returns FCDs from every chain",
        "tags": ["first class data"],
        "parameters": [
          {
            "name": "chainId",
            "in": "query",
            "description": "The ID of the chain. \"bsc\", \"eth\", \"polygon\" or \"avax\".",
            "required": false,
            "type": "string",
            "example": "bsc"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of FCDs of every chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/FCD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fcds/{chainId}": {
      "get": {
        "summary": "Returns FCDs from a specific chain",
        "tags": ["first class data"],
        "parameters": [
          {
            "name": "chainId",
            "in": "path",
            "description": "The ID of the Chain. \"bsc\", \"eth\", \"polygon\" or \"avax\".",
            "required": true,
            "type": "string",
            "example": "bsc"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of FCDs of a specific chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/FCD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/keys/fcds": {
      "get": {
        "summary": "Returns the keys used in First Class Data",
        "tags": ["keys"],
        "responses": {
          "200": {
            "description": "An array of the keys used in First Class Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": ["BNB-USD", "BNT-USD", "BTC-USD", "CNTR-USD"]
                }
              }
            }
          }
        }
      }
    },
    "/keys/layer2": {
      "get": {
        "summary": "Returns the keys used in Layer Two Data",
        "tags": ["keys"],
        "responses": {
          "200": {
            "description": "An array of the keys used in Layer Two Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": ["ADA-BTC", "ADA-USD", "ADA-USDT", "AMPL-USD-VWAP-1day", "ATOM-USDT"]
                }
              }
            }
          }
        }
      }
    },
    "/metrics/voters?startDate={startDate}&endDate={endDate}": {
      "get": {
        "summary": "Returns each voters vote count of given time interval",
        "tags": ["metrics"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "path",
            "description": "The start date of period. This date is inclusive. Date format must be YYYY-mm-dd.",
            "required": true,
            "type": "string",
            "example": "2021-12-01"
          },
          {
            "name": "endDate",
            "in": "path",
            "description": "The end date of period. This date is not inclusive. Date format must be YYYY-mm-dd.",
            "required": true,
            "type": "string",
            "example": "2022-01-01"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the number of times each voters votes in the period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoterCount"
                }
              }
            }
          },
          "400": {
            "description": "Request params are not correct",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/keys-frequency": {
      "get": {
        "summary": "Returns each key count in the past 100 blocks",
        "tags": ["metrics"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing the number of each key in the previous 100 block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsCount"
                }
              }
            }
          },
          "400": {
            "description": "Request params are not correct",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/signatures": {
      "get": {
        "summary": "Returns the participation rate of voters in the latest given interval of blocks. If period is not defined, by default it will use today's date -1 hour.",
        "tags": ["signatures"],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date of period. This date is inclusive. Date format must be yyyy-mm-dd.",
            "required": false,
            "type": "string",
            "example": "2022-01-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of period. This date is not inclusive. Date format must be yyyy-mm-dd.",
            "required": false,
            "type": "string",
            "example": "2022-02-01"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of signatures with their respective participation rate on the latest blocks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signatures"
                }
              }
            }
          }
        }
      }
    },
    "/proofs": {
      "get": {
        "summary": "Returns the latest block height and proofs for a given set of leaf keys",
        "tags": ["proofs"],
        "security": [
          {
            "ProjectAPIKey": []
          }
        ],
        "parameters": [
          {
            "name": "chainId",
            "in": "query",
            "description": "The ID of the chain. \"bsc\", \"eth\", \"polygon\" or \"avax\".",
            "required": false,
            "type": "string",
            "example": "bsc"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON containing proof data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "block": {
                          "type": "object",
                          "$ref": "#/components/schemas/Block"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "summary": "Returns information about Sanctuary",
        "responses": {
          "200": {
            "description": "A JSON containing information about Sanctuary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Info"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ProjectAPIKey": {
        "type": "apiKey",
        "in": "header",
        "scheme": "Bearer",
        "name": "Authorization"
      }
    },
    "schemas": {
      "Block": {
        "type": "object",
        "properties": {
          "voters": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "hex",
              "example": "0x998cb7821e605cC16b6174e7C50E19ADb2Dd2fB0"
            }
          },
          "votes": {
            "type": "object",
            "properties": {
              "0x998cb7821e605cC16b6174e7C50E19ADb2Dd2fB0": {
                "type": "string",
                "format": "hex",
                "example": "2000000000000000000"
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "block::153111"
          },
          "chainAddress": {
            "type": "string",
            "format": "hex",
            "example": "0x23731A38B2B2EfB1fE46053f6510A76b388e663b"
          },
          "root": {
            "type": "string",
            "format": "hex",
            "example": "0x03a0ee2e5dcdcaa1a01389beba35a1ada3b2cce8cbc1a7282f8e1e78e5fa8929"
          },
          "blockId": {
            "type": "number",
            "example": 153111
          },
          "minter": {
            "type": "string",
            "format": "hex",
            "example": "0x998cb7821e605cC16b6174e7C50E19ADb2Dd2fB0"
          },
          "staked": {
            "type": "string",
            "example": "7000000000000000000"
          },
          "power": {
            "type": "string",
            "example": "5000000000000000000"
          },
          "anchor": {
            "type": "number",
            "example": 25513802
          },
          "dataTimestamp": {
            "type": "string",
            "example": "2021-06-16T10:48:26.000Z"
          },
          "status": {
            "type": "string",
            "example": "finalized"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "Leaf": {
        "type": "object",
        "properties": {
          "proof": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "hex",
              "example": "0xca8d98e14e188c03edee74b2f52664bdf6804dbb36828484793f41817f590b78"
            }
          },
          "_id": {
            "type": "string",
            "example": "block::169269::leaf::SUSHI-USDT"
          },
          "blockId": {
            "type": "number",
            "example": "169269"
          },
          "key": {
            "type": "string",
            "example": "SUSHI-USDT"
          },
          "__v": {
            "type": "number"
          },
          "value": {
            "type": "string",
            "format": "hex",
            "example": "0x0000000000000000000000000000000000000000000000005b50db233e120000"
          }
        }
      },
      "FCD": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "bsc::ETH-USD"
          },
          "__v": {
            "type": "number"
          },
          "chainId": {
            "type": "string",
            "example": "bsc"
          },
          "dataTimestamp": {
            "type": "string",
            "example": "2021-10-20T19:27:14.000Z"
          },
          "key": {
            "type": "string",
            "example": "ETH-USD"
          },
          "value": {
            "type": "string",
            "example": "4107.01"
          }
        }
      },
      "Info": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object",
            "properties": {
              "chainAddress": {
                "type": "string",
                "format": "hex",
                "example": "0x650f3dfc6026ad1891F9a6451ABd37b67B68Fe89"
              },
              "blockNumber": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "BigNumber"
                  },
                  "hex": {
                    "type": "string",
                    "format": "hex",
                    "example": "0xd28ec0"
                  }
                }
              },
              "validators": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "hex",
                  "example": "0xDc3eBc37DA53A644D67E5E3b5BA4EEF88D969d5C"
                }
              },
              "timePadding": {
                "type": "number",
                "example": 60
              },
              "lastDataTimestamp": {
                "type": "number",
                "example": 1635955802
              },
              "lastBlockId": {
                "type": "number",
                "example": 307898
              },
              "nextLeader": {
                "type": "string",
                "format": "hex",
                "example": "0x998cb7821e605cC16b6174e7C50E19ADb2Dd2fB0"
              },
              "nextBlockId": {
                "type": "number",
                "example": 307899
              },
              "powers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "BigNumber"
                    },
                    "hex": {
                      "type": "string",
                      "format": "hex",
                      "example": "0x056bc75e2d63100000"
                    }
                  }
                }
              },
              "locations": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "https://validator.dev.umb.network"
                }
              },
              "staked": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "BigNumber"
                  },
                  "hex": {
                    "type": "string",
                    "format": "hex",
                    "example": "0x15af1d78b58c400000"
                  }
                }
              },
              "minSignatures": {
                "type": "number",
                "example": 2
              }
            }
          },
          "network": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "bnbt"
              },
              "id": {
                "type": "number",
                "example": 97
              }
            }
          },
          "contractRegistryAddress": {
            "type": "string",
            "format": "hex",
            "example": "0x8f98d3B5C911206C1Ac08B9938875620A03BCd59"
          },
          "chainContractAddress": {
            "type": "string",
            "format": "hex",
            "example": "0x650f3dfc6026ad1891F9a6451ABd37b67B68Fe89"
          },
          "version": {
            "type": "string",
            "example": "4.2.0"
          },
          "environment": {
            "type": "string",
            "example": "development"
          }
        }
      },
      "VoterCount": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "0xca8d98e14e188c03edee74b2f52664bdf6804dbb36828484793f41817f590b78"
            },
            "count": {
              "type": "number",
              "example": "12"
            }
          }
        }
      },
      "MetricsCount": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "UMB-USD"
            },
            "count": {
              "type": "number",
              "example": "100"
            }
          }
        }
      },
      "Signatures": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "0xABCDEF123456"
            },
            "participationRate": {
              "type": "number",
              "example": "91.2"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "A message representing what went wrong with the request"
          }
        }
      }
    }
  }
}
